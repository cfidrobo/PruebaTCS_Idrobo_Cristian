name: CI Pipeline

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  IMAGE_REPO: ${{ github.event.repository.name }}

jobs:
  # 1) BUILD: instalar deps y (opcional) build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Build (if defined)
        run: npm run build || echo "No build step"

  # 2) TEST: correr unit tests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install deps
        run: npm ci
      - name: Run tests
        env:
          NODE_ENV: test
        run: npm test

  # 3) VULNERABILITY SCAN: npm audit
  vulnerability:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Audit dependencies and save report
        run: |
          npm ci
          npm audit --audit-level=moderate --json > audit-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit-report.json

  # 4) SONAR ANALYSIS: SonarCloud
  sonar-analysis:
    needs: vulnerability
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install deps 
        run: npm ci
      - name: Run tests with coverage
        env:
          NODE_ENV: test
        run: npm test
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=. \
            -Dsonar.tests=. \
            -Dsonar.test.inclusions="**/*.test.js" \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info


  # 5) BUILD & PUSH: image tagged con SHA corta y 'latest'
  docker-publish:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Determine image tag
        id: tag
        run: echo "sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
      - name: Build & push
        run: |
          REPO_LOWER=$(echo "${{ env.IMAGE_REPO }}" | tr '[:upper:]' '[:lower:]')
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/$REPO_LOWER
          docker build -t $IMAGE:${{ steps.tag.outputs.sha }} -t $IMAGE:latest .
          docker push $IMAGE:${{ steps.tag.outputs.sha }}
          docker push $IMAGE:latest
